stages:
  - build
  - publish



#build-for-windows:
#  stage: build
#  image: node:22.8.0
#  variables:
#    CC: i686-w64-mingw32-gcc
#    CXX: i686-w64-mingw32-g++
#    AR: i686-w64-mingw32-ar
#    RANLIB: i686-w64-mingw32-ranlib
#  before_script:
#    - echo "@fklab:registry=https://${CI_SERVER_HOST}/api/v4/packages/npm/" >> .npmrc
#    - echo "//${CI_SERVER_HOST}/api/v4/packages/npm/:_authToken=${NPM_TOKEN}" >> .npmrc
#  script:
#    - npm install -g node-gyp
#    - npm i
#    - npm install --save node-addon-api
#    - apt-get update -y
#    - apt-get install -y mingw-w64
#    - apt install gcc-mingw-w64-i686
#    - apt install gcc-mingw-w64-x86-64
#    - i686-w64-mingw32-gcc --version
#    - apt install mingw-w64
#    - npm install --save node-addon-api
#    - npm install --save node-pre-gyp
#    - node-pre-gyp configure --target_arch=ia32
#    - node-pre-gyp build --target_arch=ia32


build-for-windows:
  stage: build
  image: node:22.8.0
  before_script:
    - echo "@fklab:registry=https://${CI_SERVER_HOST}/api/v4/packages/npm/" >> .npmrc
    - echo "//${CI_SERVER_HOST}/api/v4/packages/npm/:_authToken=${NPM_TOKEN}" >> .npmrc
  script:
    - npm install -g node-gyp
    - npm install node-pre-gyp
    - npm install
    - npm install --save node-addon-api
    - apt-get update -y
    - apt-get install -y mingw-w64
    - apt install gcc-mingw-w64-i686
    - apt install gcc-mingw-w64-x86-64
    - node-pre-gyp --help
  #  - node-pre-gyp build --target_arch=ia32 --target_platform=win32
  artifacts:
    paths:
      - prebuilds/**

#build-for-windows:
#  stage: build
#  image: node:22.8.0
#  before_script:
#    - echo "@fklab:registry=https://${CI_SERVER_HOST}/api/v4/packages/npm/" >> .npmrc
#    - echo "//${CI_SERVER_HOST}/api/v4/packages/npm/:_authToken=${NPM_TOKEN}" >> .npmrc
#  script:
#    - npm install -g node-gyp
#    - npm install
#    - npm install --save node-addon-api
#    - node-gyp configure --arch=x64 --target_platform=win32
#    - node-gyp build
#    - mkdir -p ./prebuilds/win32-x64/
#    - mv ./build/Release/candongle-kvaser.node ./prebuilds/win32-x64/@fklab+candongle-kvaser.node
#  artifacts:
#    paths:
#      - prebuilds/**


#build-for-ubuntu:
#  stage: build
#  image: node:$NODE_VERSION
#  script:
#    - apt-get update && apt-get install -y python3 make g++  # Install dependencies
#    - npm install -g node-gyp
#    - npm install
#    - node-gyp configure --arch=$TARGET_ARCH --target_platform=linux
#    - node-gyp build
#  artifacts:
#    paths:
#      - build/  # Save the build artifacts
#
#build-for-macos:
#  stage: build
#  tags:
#    - macos
#  script:
#    - brew install python
#    - npm install -g node-gyp
#    - npm install
#    - node-gyp configure --arch=$TARGET_ARCH --target_platform=darwin
#    - node-gyp build
#  artifacts:
#    paths:
#      - build/  # Save the build artifacts

#publish-to-gitlab-registry:
#  stage: publish
#  image: node:22.8.0
#  script:
#    - echo "@fklab:registry=https://${CI_SERVER_HOST}/api/v4/packages/npm/" >> .npmrc
#    - echo "//${CI_SERVER_HOST}/api/v4/packages/npm/:_authToken=${NPM_TOKEN}" >> .npmrc
#    - npm install
#    - npm run build
#    - ls
#    - tar czfv prebuilds-0.0.1.tar.gz prebuilds
#    - echo "@fklab:registry=https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/" >> .npmrc
#    - echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" >> .npmrc
#    - npm publish
#  #  only:
#  #    - tags
#  dependencies:
#    - build-for-windows
##    - build-for-ubuntu
##    - build-for-macos
