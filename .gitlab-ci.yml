stages:
  - build
  - publish


#    - name: darwin
#      os: macos-11
#      node: x64
#      command: prebuildify
#      args: --arch x64+arm64
#    - name: win32-x86
#      os: windows-2019
#      node: x86
#      command: prebuildify
#    - name: win32-x64
#      os: windows-2019
#      node: x64
#      command: prebuildify

#build-for-windows:
#  stage: build
#  image: node:22.8.0
#  before_script:
#    - echo "@fklab:registry=https://${CI_SERVER_HOST}/api/v4/packages/npm/" >> .npmrc
#    - echo "//${CI_SERVER_HOST}/api/v4/packages/npm/:_authToken=${NPM_TOKEN}" >> .npmrc
#  script:
#    - npm install -g node-gyp
#    - npm install
#    - npm install --save node-addon-api
#    - node-gyp configure --arch=x64 --target_platform=win32
#    - node-gyp build
#  artifacts:
#    paths:
#      - prebuilds/**

build-for-linux-x64:
  stage: build
  image: node:22.8.0
  before_script:
    - echo "@fklab:registry=https://${CI_SERVER_HOST}/api/v4/packages/npm/" >> .npmrc
    - echo "//${CI_SERVER_HOST}/api/v4/packages/npm/:_authToken=${NPM_TOKEN}" >> .npmrc
  script:
    - npm install -g prebuildify
    - npm install -g node-gyp
    - npm install -g prebuildify-cross
    - npm i
    - npm run prebuildify-cross -- -i centos7-devtoolset7 -i alpine
  artifacts:
    paths:
      - prebuilds/


#build-for-linux-x64:
#  stage: build
#  image: node:22.8.0
#  before_script:
#    - echo "@fklab:registry=https://${CI_SERVER_HOST}/api/v4/packages/npm/" >> .npmrc
#    - echo "//${CI_SERVER_HOST}/api/v4/packages/npm/:_authToken=${NPM_TOKEN}" >> .npmrc
#  script:
#    - npm i
#    - npm run prebuildify-cross -- -i centos7-devtoolset7 -i alpine
#  artifacts:
#    paths:
#      - prebuilds/

#build-for-linux-arm:
#  stage: build
#  image: node:22.8.0
#  before_script:
#    - echo "@fklab:registry=https://${CI_SERVER_HOST}/api/v4/packages/npm/" >> .npmrc
#    - echo "//${CI_SERVER_HOST}/api/v4/packages/npm/:_authToken=${NPM_TOKEN}" >> .npmrc
#  script:
#    - npm i
#    - npm run prebuildify-cross -- -i linux-arm64-lts -i linux-armv7 -i linux-armv6
#  artifacts:
#    paths:
#      - prebuilds/
#
#build-for-android-arm:
#  stage: build
#  image: node:22.8.0
#  before_script:
#    - echo "@fklab:registry=https://${CI_SERVER_HOST}/api/v4/packages/npm/" >> .npmrc
#    - echo "//${CI_SERVER_HOST}/api/v4/packages/npm/:_authToken=${NPM_TOKEN}" >> .npmrc
#  script:
#    - npm i
#    - npm run prebuildify-cross -- -i android-arm64 -i android-armv7
#  artifacts:
#    paths:
#      - prebuilds/

#build-for-macos:
#  stage: build
#  tags:
#    - macos
#  script:
#    - brew install python
#    - npm install -g node-gyp
#    - npm install
#    - node-gyp configure --arch=$TARGET_ARCH --target_platform=darwin
#    - node-gyp build
#  artifacts:
#    paths:
#      - build/  # Save the build artifacts

#publish-to-gitlab-registry:
#  stage: publish
#  image: node:22.8.0
#  script:
#    - echo "@fklab:registry=https://${CI_SERVER_HOST}/api/v4/packages/npm/" >> .npmrc
#    - echo "//${CI_SERVER_HOST}/api/v4/packages/npm/:_authToken=${NPM_TOKEN}" >> .npmrc
#    - npm install
#    - npm run build
#    - ls
#    - tar czfv prebuilds-0.0.1.tar.gz prebuilds
#    - echo "@fklab:registry=https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/" >> .npmrc
#    - echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" >> .npmrc
#    - npm publish
#  #  only:
#  #    - tags
#  dependencies:
#    - build-for-windows
##    - build-for-ubuntu
##    - build-for-macos
