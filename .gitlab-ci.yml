stages:
  - build
  - publish

build-for-windows:
  stage: build
  image: node:22.8.0
  before_script:
    - echo "@fklab:registry=https://${CI_SERVER_HOST}/api/v4/packages/npm/" >> .npmrc
    - echo "//${CI_SERVER_HOST}/api/v4/packages/npm/:_authToken=${NPM_TOKEN}" >> .npmrc
  script:
    - npm install -g node-gyp
    - npm install
    - npm install --save node-addon-api
    - node-gyp configure --arch=x64 --target_platform=win32
    - node-gyp build
    - mkdir -p ./prebuilds/win32-x64/
    - mv ./build/Release/candongle-kvaser.node ./prebuilds/win32-x64/@fklab+candongle-kvaser.node
  artifacts:
    paths:
      - prebuilds/**

#build-for-ubuntu:
#  stage: build
#  image: node:$NODE_VERSION
#  script:
#    - apt-get update && apt-get install -y python3 make g++  # Install dependencies
#    - npm install -g node-gyp
#    - npm install
#    - node-gyp configure --arch=$TARGET_ARCH --target_platform=linux
#    - node-gyp build
#  artifacts:
#    paths:
#      - build/  # Save the build artifacts
#
#build-for-macos:
#  stage: build
#  tags:
#    - macos
#  script:
#    - brew install python
#    - npm install -g node-gyp
#    - npm install
#    - node-gyp configure --arch=$TARGET_ARCH --target_platform=darwin
#    - node-gyp build
#  artifacts:
#    paths:
#      - build/  # Save the build artifacts

publish-to-gitlab-registry:
  stage: publish
  image: node:22.8.0
  script:
    - echo "@fklab:registry=https://${CI_SERVER_HOST}/api/v4/packages/npm/" >> .npmrc
    - echo "//${CI_SERVER_HOST}/api/v4/packages/npm/:_authToken=${NPM_TOKEN}" >> .npmrc
    - npm install
    - npm run build
    - ls
    - tar czfv prebuilds-0.0.1.tar.gz prebuilds
    - echo "@fklab:registry=https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/" >> .npmrc
    - echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" >> .npmrc
    - npm publish
  #  only:
  #    - tags
  dependencies:
    - build-for-windows
#    - build-for-ubuntu
#    - build-for-macos
